{"version":3,"sources":["components/tables/modalDelete.js","redux/user/userActionTypes.js","components/tables/tables.js","redux/user/userAction.js","components/signin/signin.js","containers/App.js","serviceWorker.js","redux/user/userReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["DeleteModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Footer","variant","onClick","onHide","onConfirm","userActionTypes","LOGIN","LOGOUT","useStyles","makeStyles","theme","button","margin","spacing","connect","state","currentUser","user","dispatch","logout","type","token","classes","useState","columns","title","field","lookup","busch","livingston","collegeAve","cookdouglas","setState","shouldFetch","setShouldFetch","modalDeleteShow","setModalDeleteShow","useEffect","a","axios","get","result","data","console","log","fetchData","length","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","post","headers","authorization","then","respone","catch","e","onRowUpdate","oldData","indexOf","_id","patch","onRowDelete","splice","delete","Button","color","className","startIcon","preventDefault","show","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","grey","backgroundSize","backgroundPosition","paper","display","flexDirection","alignItems","avatar","form","width","marginTop","submit","colorRed","login","userInformation","payload","email","setEmail","password","setPassword","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","noValidate","onSubmit","res","alert","TextField","required","fullWidth","label","name","autoComplete","autoFocus","onChange","target","value","FormControlLabel","control","Checkbox","Link","href","Boolean","window","location","hostname","match","INITIAL_STATE","userReducer","action","persistConfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","middlewares","logger","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"qaA8BeA,MAxBf,SAAqBC,GACjB,OACE,kBAACC,EAAA,EAAD,iBACMD,EADN,CAEEE,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAER,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,CAAaC,GAAG,iCAAhB,mBAIF,kBAACP,EAAA,EAAMQ,KAAP,KACE,8CAEF,kBAACR,EAAA,EAAMS,OAAP,KACE,kBAAC,IAAD,CAAQC,QAAQ,UAAUC,QAASZ,EAAMa,QAAzC,MACA,kBAAC,IAAD,CAAQF,QAAQ,YAAYC,QAASZ,EAAMc,WAA3C,U,QCnBKC,EALS,CACpBC,MAAO,QACPC,OAAQ,UCeNC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,QAsLXC,eARS,SAAAC,GAAK,MAAK,CAChCC,YAAaD,EAAME,KAAKD,gBAGE,SAAAE,GAAQ,MAAK,CACvCC,OAAQ,kBAAMD,EC/La,CAC3BE,KAAMf,EAAgBE,aDiMTO,EAlLW,SAACxB,GAAW,IAC5B0B,EAAwB1B,EAAxB0B,YAAaG,EAAW7B,EAAX6B,OACfE,EAAQL,EAAYK,MAEpBC,EAAUd,IAJmB,EAMTe,mBAAS,CACjCC,QAAS,CACP,CAAEC,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,cAAeC,MAAO,QAC/B,CAAED,MAAO,QAASC,MAAO,MAAON,KAAM,UACtC,CACEK,MAAO,SACPC,MAAO,SACPC,OAAQ,CACNC,MAAO,QACPC,WAAY,aACZC,WAAY,iBACZC,YAAa,oBAlBc,mBAM5BP,EAN4B,aAwBTD,mBAAS,KAxBA,mBAwB5BR,EAxB4B,KAwBrBiB,EAxBqB,OAyBGT,oBAAS,GAzBZ,mBAyB5BU,EAzB4B,KAyBfC,EAzBe,OA0BWX,oBAAS,GA1BpB,mBA0B5BY,EA1B4B,KA0BXC,EA1BW,KA0DnC,OA5BAC,qBAAU,WAeJJ,GAbW,uCAAG,4BAAAK,EAAA,+EAGKC,IAAMC,IACvB,iDAJY,OAGVC,EAHU,OAMdT,EAASS,EAAOC,KAAKA,MACrBC,QAAQC,IAAIH,GAPE,gDAUd,MAAOE,QAAQC,IAAR,MAVO,yDAAH,oDAcbC,GACAX,GAAe,IAEfS,QAAQC,IAAIX,KAEb,CAAClB,EAAM+B,SAQR,6BACE,kBAAC,IAAD,CACErB,MAAM,eACND,QAASA,EAAQA,QACjBkB,KAAM3B,EACNgC,SAAU,CACRC,SAAU,SAACC,GAAD,OACR,IAAIC,SAAQ,SAACC,GACXC,YAAW,WACTD,IACAnB,GAAS,SAACqB,GACR,IAAMX,EAAI,YAAOW,GAYjB,OAXAV,QAAQC,IAAIK,GACZP,EAAKY,KAAKL,GACVN,QAAQC,IAAI7B,GACZwB,IACGgB,KACC,gDACAN,EACA,CAAEO,QAAS,CAAEC,cAAepC,KAE7BqC,MAAK,SAACC,GAAD,OAAahB,QAAQC,IAAIe,MAC9BC,OAAM,SAACC,GAAD,OAAOlB,QAAQC,IAAIiB,MACrBnB,OAER,SAEPoB,YAAa,SAACb,EAASc,GAAV,OACX,IAAIb,SAAQ,SAACC,GACXC,YAAW,WACTD,IACIY,GACF/B,GAAS,SAACqB,GACR,IAAMX,EAAI,YAAOW,GACjBX,EAAKA,EAAKsB,QAAQD,IAAYd,EAC9B,IAAMnD,EAAKiE,EAAQE,IAanB,OATA1B,IACG2B,MACC,iDAAmDpE,EACnDmD,EACA,CAAEO,QAAS,CAAEC,cAAepC,KAE7BqC,MAAK,SAACC,GAAD,OAAahB,QAAQC,IAAIe,MAC9BC,OAAM,SAACC,GAAD,OAAOlB,QAAQC,IAAIiB,MAErBnB,OAGV,SAEPyB,YAAa,SAACJ,GAAD,OACX,IAAIb,SAAQ,SAACC,GACXC,YAAW,WACTD,IACAnB,GAAS,SAACqB,GACR,IAAMX,EAAI,YAAOW,GACjBX,EAAK0B,OAAO1B,EAAKsB,QAAQD,GAAU,GACnC,IAAMjE,EAAKiE,EAAQE,IAUnB,OATAtB,QAAQC,IAAI7B,GACZwB,IACG8B,OACC,iDAAmDvE,EACnD,CAAE0D,QAAS,CAAEC,cAAepC,KAE7BqC,MAAK,SAACC,GAAD,OAAahB,QAAQC,IAAIe,MAC9BC,OAAM,SAACC,GAAD,OAAOlB,QAAQC,IAAIiB,MAErBnB,OAER,YAIX,kBAAC4B,EAAA,EAAD,CACErE,QAAQ,YACRsE,MAAM,UACN/E,KAAK,QACLgF,UAAWlD,EAAQX,OACnB8D,UAAW,kBAAC,IAAD,MACXvE,QAAS,SAAC2D,GACTT,YAAW,WAAMjC,MAAU,KAC1B0C,EAAEa,mBARN,WAaA,kBAACJ,EAAA,EAAD,CACErE,QAAQ,YACRsE,MAAM,YACN/E,KAAK,QACLgF,UAAWlD,EAAQX,OACnB8D,UAAW,kBAAC,IAAD,MACXvE,QAAS,kBAAMkC,GAAmB,KANpC,cAUA,kBAAC,EAAD,CACEuC,KAAMxC,EACNhC,OAAQ,kBAAMiC,GAAmB,IACjChC,UAAW,WACT4B,EAAS,IACTI,GAAmB,U,2GEzKvB1B,EAAQkE,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,WACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAKd1E,EAAYC,aAAW,iBAAO,CAClC2E,KAAM,CACJC,OAAQ,SAEVC,MAAO,CACLC,gBACE,8EACFC,iBAAkB,YAClBC,gBACyB,UAAvB/E,EAAMmE,QAAQzD,KACVV,EAAMmE,QAAQa,KAAK,IACnBhF,EAAMmE,QAAQa,KAAK,KACzBC,eAAgB,QAChBC,mBAAoB,UAEtBC,MAAO,CACLjF,OAAQF,EAAMG,QAAQ,EAAG,GACzBiF,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNrF,OAAQF,EAAMG,QAAQ,GACtB4E,gBAAiB/E,EAAMmE,QAAQM,UAAUH,MAE3CkB,KAAM,CACJC,MAAO,OACPC,UAAW1F,EAAMG,QAAQ,IAE3BwF,OAAQ,CACNzF,OAAQF,EAAMG,QAAQ,EAAG,EAAG,GAC5B4E,gBAAiB/E,EAAMmE,QAAQM,UAAUH,MAE3CsB,SAAU,CACR/B,MAAO7D,EAAMmE,QAAQM,UAAUH,UAyGpBlE,cAAQ,MAHI,SAAAI,GAAQ,MAAK,CACtCqF,MAAO,SAACC,GAAD,OAAqBtF,EDzKT,SAACsF,GAAD,MAAsB,CACzCpF,KAAMf,EAAgBC,MACtBmG,QAASD,GCuK4BD,CAAMC,QAE9B1F,EArGA,SAACxB,GACd,IAAMgC,EAAUd,IADQ,EAEEe,mBAAS,IAFX,mBAEjBmF,EAFiB,KAEVC,EAFU,OAGQpF,mBAAS,IAHjB,mBAGjBqF,EAHiB,KAGPC,EAHO,KAIhBN,EAAUjH,EAAViH,MAyBR,OACE,kBAACO,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAAOxC,UAAWlD,EAAQ8D,MAClD,kBAAC6B,EAAA,EAAD,MACA,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAG7C,UAAWlD,EAAQgE,QACvD,kBAACwB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGL,UAAWM,IAAOC,UAAW,EAAGC,QAAM,GACrE,yBAAKhD,UAAWlD,EAAQuE,OACtB,kBAAC4B,EAAA,EAAD,CAAQjD,UAAWlD,EAAQ2E,QACzB,kBAAC,IAAD,OAEF,kBAACyB,EAAA,EAAD,CAAYV,UAAU,KAAK/G,QAAQ,MAAnC,WAGA,0BAAMuE,UAAWlD,EAAQ4E,KAAMyB,YAAY,EAAOC,SApCzC,SAAC/D,GAChBA,EAAEa,iBACF,IAAMhC,EAAO,CACXgE,MAAOA,EACPE,SAAUA,GAGZrE,IACGgB,KAAK,sDAAuDb,GAC5DgB,MAAK,SAACmE,GAAD,OAAStB,EAAMsB,EAAInF,SACxBkB,OAAM,SAACC,GACNlB,QAAQC,IAAIiB,GACZiE,MAAM,2BACNnB,EAAS,IACTE,EAAY,SAuBR,kBAACkB,EAAA,EAAD,CACE9H,QAAQ,WACRW,OAAO,SACPoH,UAAQ,EACRC,WAAS,EACTnI,GAAG,QACHoI,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EAET9D,MAAM,YACN+D,SAhCc,SAACzE,GACzB8C,EAAS9C,EAAE0E,OAAOC,QAgCRA,MAAO9B,IAET,kBAACqB,EAAA,EAAD,CACE9H,QAAQ,WACRW,OAAO,SACPoH,UAAQ,EACRC,WAAS,EACTE,KAAK,WACLD,MAAM,WACN9G,KAAK,WACLtB,GAAG,WACHsI,aAAa,mBAEb7D,MAAM,YACN+D,SA5CiB,SAACzE,GAC5BgD,EAAYhD,EAAE0E,OAAOC,QA4CXA,MAAO5B,IAET,kBAAC6B,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAUH,MAAM,aACzBN,MAAM,gBAER,kBAAC5D,EAAA,EAAD,CACElD,KAAK,SACL6G,WAAS,EACThI,QAAQ,YACRuE,UAAWlD,EAAQ+E,QAJrB,WAQA,kBAACS,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,GACX,kBAACyB,EAAA,EAAD,CAAMC,KAAK,IAAI5I,QAAQ,QAAQuE,UAAWlD,EAAQgF,UAAlD,6BC3IhB,IAIexF,eAJS,SAAAC,GAAK,MAAK,CAChCC,YAAaD,EAAME,KAAKD,eAGXF,EAdf,SAAaxB,GAAQ,IACd0B,EAAe1B,EAAf0B,YAEL,OACE,yBAAKwD,UAAU,OACZxD,EAAa,kBAAC,EAAD,MAAU,kBAAC,EAAD,U,SCFV8H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gDChBAC,EAAgB,CACpBnI,YAAa,MAqBAoI,EAlBK,WAAoC,IAAnCrI,EAAkC,uDAA1BoI,EAAeE,EAAW,uCACrD,OAAQA,EAAOjI,MACb,KAAKf,EAAgBC,MACnB,OAAO,2BACFS,GADL,IAEEC,YAAaqI,EAAO5C,UAGxB,KAAKpG,EAAgBE,OACnB,OAAO,2BACFQ,GADL,IAEEC,YAAa,OAEjB,QACE,OAAOD,I,SCdPuI,GAAgB,CAClBC,IAAK,OACLC,Q,OAAAA,EACAC,UAAW,CAAC,SAMVC,GAAcC,YAAgB,CAChC1I,KAAMmI,IAIKQ,eAAeN,GAAeI,ICdvCG,GAAc,CAACC,KAERC,GAAQC,YAAYN,GAAaO,IAAe,WAAf,EAAmBJ,KACpDK,GAAYC,YAAaJ,I,UCAtCK,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAMO,WAAP,KACE,kBAAC,KAAD,CAAaJ,UAAWA,IACtB,kBAAC,EAAD,UAKRK,SAASC,eAAe,SJgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjH,MAAK,SAAAkH,GACJA,EAAaC,gBAEdjH,OAAM,SAAAkH,GACLnI,QAAQmI,MAAMA,EAAMC,c","file":"static/js/main.a92063df.chunk.js","sourcesContent":["import React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Button from 'react-bootstrap/Button';\n\nfunction DeleteModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Confirm Delete\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>Are you sure?</h4>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={props.onHide}>No</Button>\n          <Button variant=\"secondary\" onClick={props.onConfirm}>Yes</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n}\n\nexport default DeleteModal;","const userActionTypes = {\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\"\n};\n\nexport default userActionTypes;","import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport DeleteModal from \"./modalDelete\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/user/userAction\"\n/*\nchange the state into 2 state\nfetch data from server\nreturn {...preState, data}\n*/\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst MaterialTableDemo = (props) => {\n  const { currentUser, logout } = props;\n  const token = currentUser.token;\n\n  const classes = useStyles();\n\n  const [columns, setCol] = useState({\n    columns: [\n      { title: \"Name\", field: \"name\" },\n      { title: \"Information\", field: \"info\" },\n      { title: \"Image\", field: \"img\", type: \"string\" },\n      {\n        title: \"Campus\",\n        field: \"campus\",\n        lookup: {\n          busch: \"Busch\",\n          livingston: \"Livingston\",\n          collegeAve: \"College Avenue\",\n          cookdouglas: \"Cook/Douglas\",\n        },\n      },\n    ],\n  });\n\n  const [state, setState] = useState([]);\n  const [shouldFetch, setShouldFetch] = useState(true);\n  const [modalDeleteShow, setModalDeleteShow] = useState(false);\n\n  // fetch data from server Heroku\n\n  useEffect(() => {\n    // console.log(\"I am usee effect\") // Test use effect\n    const fetchData = async () => {\n      //let result = await axios.get('http://localhost:5000/food');\n      try {\n        let result = await axios.get(\n          \"https://menurutgersbackend.herokuapp.com/food\"\n        );\n        setState(result.data.data);\n        console.log(result);\n        //setShouldFetch(false)\n      } catch (e) {\n        if (e) console.log(e);\n      }\n    };\n    if (shouldFetch) {\n      fetchData();\n      setShouldFetch(false);\n    } else {\n      console.log(shouldFetch);\n    }\n  }, [state.length]);\n\n  // console.log(\"render...\");   // test whether the web renders or not\n\n  // Edit data from server\n  // CODE GOES HERE: (just for fun)\n\n  return (\n    <div>\n      <MaterialTable\n        title=\"Rutgers Menu\"\n        columns={columns.columns}\n        data={state}\n        editable={{\n          onRowAdd: (newData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState];\n                  console.log(newData);\n                  data.push(newData);\n                  console.log(state);\n                  axios\n                    .post(\n                      \"https://menurutgersbackend.herokuapp.com/food\",\n                      newData,\n                      { headers: { authorization: token } }\n                    )\n                    .then((respone) => console.log(respone))\n                    .catch((e) => console.log(e)); // update data on server\n                  return data;\n                });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  setState((prevState) => {\n                    const data = [...prevState];\n                    data[data.indexOf(oldData)] = newData;\n                    const id = oldData._id;\n                    // console.log(state);\n                    // console.log(oldData._id);\n                    // console.log(newData._id);\n                    axios\n                      .patch(\n                        \"https://menurutgersbackend.herokuapp.com/food/\" + id,\n                        newData,\n                        { headers: { authorization: token } }\n                      )\n                      .then((respone) => console.log(respone))\n                      .catch((e) => console.log(e)); // update data on server\n\n                    return data;\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState];\n                  data.splice(data.indexOf(oldData), 1);\n                  const id = oldData._id;\n                  console.log(state);\n                  axios\n                    .delete(\n                      \"https://menurutgersbackend.herokuapp.com/food/\" + id,\n                      { headers: { authorization: token } }\n                    )\n                    .then((respone) => console.log(respone))\n                    .catch((e) => console.log(e)); // update data on server\n\n                  return data;\n                });\n              }, 600);\n            }),\n        }}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        className={classes.button}\n        startIcon={<SaveIcon />}\n        onClick={(e) => {\n         setTimeout(() =>{logout()},1000);\n          e.preventDefault();\n        }}\n      >\n        Log Out\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"large\"\n        className={classes.button}\n        startIcon={<DeleteIcon />}\n        onClick={() => setModalDeleteShow(true)}\n      >\n        Delete All\n      </Button>\n      <DeleteModal\n        show={modalDeleteShow}\n        onHide={() => setModalDeleteShow(false)}\n        onConfirm={() => {\n          setState([]);\n          setModalDeleteShow(false);\n        }}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n})\n\nconst mapDispatchToProps =  dispatch => ({\n  logout: () => dispatch(logout())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MaterialTableDemo);","import userActionTypes from \"./userActionTypes\";\n\nexport const login = (userInformation) => ({\n  type: userActionTypes.LOGIN,\n  payload: userInformation,\n});\n\nexport const logout = () => ({\n  type: userActionTypes.LOGOUT,\n});\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { login } from \"../../redux/user/userAction\";\nimport {connect} from \"react-redux\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#757ce8\",\n      main: \"##e53935\",\n      dark: \"#002884\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff7961\",\n      main: \"#e53935\",\n      dark: \"#ba000d\",\n      contrastText: \"#000\",\n    },\n  },\n});\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage:\n      \"url(https://bestdelegate.com/wp-content/uploads/2013/12/Rutgers-Campus.jpg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  colorRed: {\n    color: theme.palette.secondary.main,\n  },\n}));\n\nconst SignIn = (props) => {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { login } = props;\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      email: email,\n      password: password,\n    };\n\n    axios\n      .post(\"https://menurutgersbackend.herokuapp.com/user/login\", data)\n      .then((res) => login(res.data))\n      .catch((e) => {\n        console.log(e);\n        alert(\"Wrong email or password\");\n        setEmail(\"\");\n        setPassword(\"\");\n      });\n  };\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate={false} onSubmit={onSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              // className={classes.colorRed}\n              color=\"secondary\"\n              onChange={handleEmailChange}\n              value={email}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              // className={classes.colorRed}\n              color=\"secondary\"\n              onChange={handlePasswordChange}\n              value={password}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\" className={classes.colorRed}>\n                  Forgot password?\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  login: (userInformation) => dispatch(login(userInformation))\n})\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n// import SignInPage from \"../pages/SignInPage\";\n// import ManagerPage from \"../pages/ManagerPage\";\n// import { Route, Switch, Redirect } from \"react-router-dom\";\nimport Table from \"../components/tables/tables\";\nimport SignIn from \"../components/signin/signin\";\nimport {connect} from \"react-redux\"\n\nfunction App(props) {\n  let {currentUser} = props;\n\n  return (\n    <div className=\"App\">\n      {currentUser ?<Table />:<SignIn /> }\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n})\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import userActionTypes from \"./userActionTypes\";\n\nconst INITIAL_STATE = {\n  currentUser: null\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case userActionTypes.LOGIN:\n      return {\n        ...state,\n        currentUser: action.payload\n      };\n\n    case userActionTypes.LOGOUT:\n      return {\n        ...state,\n        currentUser: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {combineReducers} from \"redux\";\nimport userReducer from \"./user/userReducer\";\n\nimport {persistReducer} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    whitelist: [\"user\"]\n}\n\n\n\n\nconst rootReducer = combineReducers({\n    user: userReducer\n})\n\n\nexport default persistReducer(persistConfig, rootReducer)","import {createStore, applyMiddleware} from 'redux';\nimport {persistStore} from \"redux-persist\"\nimport logger from 'redux-logger';\n\nimport rootReducer from \"./rootReducer\";\n\nconst middlewares = [logger];//more things will be added\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store)\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store, persistor } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}